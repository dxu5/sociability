{"ast":null,"code":"import _classCallCheck from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/derekxu/Documents/socialability-client/src/components/hum/CommentForm.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme);\n};\n\nvar CommentForm = /*#__PURE__*/function (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      body: \"\",\n      errors: errors\n    };\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          authenticated = _this$props.authenticated;\n      var errors = this.state.errors;\n      var commentFormMarkup = authenticated ? /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        name: \"body\",\n        type: \"text\",\n        label: \"Comment on ability\",\n        error: errors.comment ? true : false,\n        helperText: errors.comment,\n        value: this.state.body,\n        onChange: this.handleChange,\n        fullWidth: true,\n        className: classes.TextField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }))) : null;\n      return commentFormMarkup;\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  humId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UI: state.UI,\n    authenticated: state.user.authenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  submitComment: submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/Users/derekxu/Documents/socialability-client/src/components/hum/CommentForm.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","styles","theme","CommentForm","state","body","errors","props","classes","authenticated","commentFormMarkup","textAlign","handleSubmit","comment","handleChange","propTypes","func","isRequired","UI","object","humId","string","bool","mapStateToProps","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,iCAA9B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,2BACVA,KADU;AAAA,CAAf;;IAIMC,W;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAANA;AAFM,K;;;;;;6BAIC;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,aADV,eACUA,aADV;AAEP,UAAMH,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAA1B;AAEA,UAAMI,iBAAiB,GAAGD,aAAa,gBACrC,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAC,oBAHR;AAIE,QAAA,KAAK,EAAEN,MAAM,CAACO,OAAP,GAAiB,IAAjB,GAAwB,KAJjC;AAKE,QAAA,UAAU,EAAEP,MAAM,CAACO,OALrB;AAME,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,IANpB;AAOE,QAAA,QAAQ,EAAE,KAAKS,YAPjB;AAQE,QAAA,SAAS,MARX;AASE,QAAA,SAAS,EAAEN,OAAO,CAACV,SATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADqC,GAgBnC,IAhBJ;AAiBA,aAAOY,iBAAP;AACD;;;;EA3BuBlB,S;;AA8B1BW,WAAW,CAACY,SAAZ,GAAwB;AACtBf,EAAAA,aAAa,EAAEN,SAAS,CAACsB,IAAV,CAAeC,UADR;AAEtBC,EAAAA,EAAE,EAAExB,SAAS,CAACyB,MAAV,CAAiBF,UAFC;AAGtBT,EAAAA,OAAO,EAAEd,SAAS,CAACyB,MAAV,CAAiBF,UAHJ;AAItBG,EAAAA,KAAK,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBJ,UAJF;AAKtBR,EAAAA,aAAa,EAAEf,SAAS,CAAC4B,IAAV,CAAeL;AALR,CAAxB;;AAQA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACnB,KAAD;AAAA,SAAY;AAClCc,IAAAA,EAAE,EAAEd,KAAK,CAACc,EADwB;AAElCT,IAAAA,aAAa,EAAEL,KAAK,CAACoB,IAAN,CAAWf;AAFQ,GAAZ;AAAA,CAAxB;;AAKA,eAAeV,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA,aAAa,EAAbA;AAAF,CAAlB,CAAP,CACbL,UAAU,CAACM,MAAD,CAAV,CAAmBE,WAAnB,CADa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme,\n});\n\nclass CommentForm extends Component {\n  state = {\n    body: \"\",\n    errors,\n  };\n  render() {\n    const { classes, authenticated } = this.props;\n    const errors = this.state.errors;\n\n    const commentFormMarkup = authenticated ? (\n      <Grid item sm={12} style={{ textAlign: \"center\" }}>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Comment on ability\"\n            error={errors.comment ? true : false}\n            helperText={errors.comment}\n            value={this.state.body}\n            onChange={this.handleChange}\n            fullWidth\n            className={classes.TextField}\n          />\n        </form>\n      </Grid>\n    ) : null;\n    return commentFormMarkup;\n  }\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  humId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps, { submitComment })(\n  withStyles(styles)(CommentForm)\n);\n"]},"metadata":{},"sourceType":"module"}