{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, LIKE_HUM, UNLIKE_HUM, DELETE_HUM, LOADING_UI, SET_ERRORS, CLEAR_ERRORS, POST_HUM, SET_SCREAM, STOP_LOADING_UI } from \"../types\";\nimport axios from \"axios\";\nexport var getHums = function getHums() {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get(\"/Hums\").then(function (res) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: []\n      });\n    });\n  };\n};\nexport var postHum = function postHum(newHum) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.post(\"/Hum\", newHum).then(function (res) {\n      dispatch({\n        type: POST_HUM,\n        payload: res.data\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var likeHum = function likeHum(humId) {\n  return function (dispatch) {\n    console.log(\"like\");\n    axios.get(\"/Hum/\".concat(humId, \"/like\")).then(function (res) {\n      dispatch({\n        type: LIKE_HUM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var unlikeHum = function unlikeHum(humId) {\n  return function (dispatch) {\n    console.log(\"unlike\");\n    axios.get(\"/Hum/\".concat(humId, \"/unlike\")).then(function (res) {\n      dispatch({\n        type: UNLIKE_HUM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var getHum = function getHum(humId) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.get(\"/Hum/\".concat(humId)).then(function (res) {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({\n        type: STOP_LOADING_UI\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var deleteHum = function deleteHum(humId) {\n  return function (dispatch) {\n    axios.delete(\"/Hum/\".concat(humId)).then(function () {\n      dispatch({\n        type: DELETE_HUM,\n        payload: humId\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var clearErrors = function clearErrors() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n};","map":{"version":3,"sources":["/Users/derekxu/Documents/socialability-client/src/redux/actions/dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","LIKE_HUM","UNLIKE_HUM","DELETE_HUM","LOADING_UI","SET_ERRORS","CLEAR_ERRORS","POST_HUM","SET_SCREAM","STOP_LOADING_UI","axios","getHums","dispatch","type","get","then","res","payload","data","catch","err","postHum","newHum","post","response","likeHum","humId","console","log","unlikeHum","getHum","deleteHum","delete","clearErrors"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,UAPF,EAQEC,YARF,EASEC,QATF,EAUEC,UAVF,EAWEC,eAXF,QAYO,UAZP;AAaA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,UAACC,QAAD,EAAc;AACzCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AACAU,IAAAA,KAAK,CACFI,GADH,CACO,OADP,EAEGC,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEd,WADC;AAEPkB,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEd,WADC;AAEPkB,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KAbH;AAcD,GAhBsB;AAAA,CAAhB;AAkBP,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD;AAAA,SAAY,UAACV,QAAD,EAAc;AAC/CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAM,IAAAA,KAAK,CACFa,IADH,CACQ,MADR,EACgBD,MADhB,EAEGP,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,QADC;AAEPU,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP;AAAR,OAAD,CAAR;AACD,KARH,EASGa,KATH,CASS,UAACC,GAAD,EAAS;AACdR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,UADC;AAEPY,QAAAA,OAAO,EAAEG,GAAG,CAACI,QAAJ,CAAaN;AAFf,OAAD,CAAR;AAID,KAdH;AAeD,GAjBsB;AAAA,CAAhB;AAmBP,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SAAW,UAACd,QAAD,EAAc;AAC9Ce,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAlB,IAAAA,KAAK,CACFI,GADH,gBACeY,KADf,YAEGX,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEZ,QADC;AAEPgB,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD;AAAA,aAASO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CAAT;AAAA,KART;AASD,GAXsB;AAAA,CAAhB;AAaP,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACH,KAAD;AAAA,SAAW,UAACd,QAAD,EAAc;AAChDe,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAlB,IAAAA,KAAK,CACFI,GADH,gBACeY,KADf,cAEGX,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEX,UADC;AAEPe,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD;AAAA,aAASO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CAAT;AAAA,KART;AASD,GAXwB;AAAA,CAAlB;AAaP,OAAO,IAAMU,MAAM,GAAG,SAATA,MAAS,CAACJ,KAAD;AAAA,SAAW,UAACd,QAAD,EAAc;AAC7CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAM,IAAAA,KAAK,CACFI,GADH,gBACeY,KADf,GAEGX,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,UADC;AAEPS,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAD,CAAR;AACD,KARH,EASGU,KATH,CASS,UAACC,GAAD;AAAA,aAASO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CAAT;AAAA,KATT;AAUD,GAZqB;AAAA,CAAf;AAcP,OAAO,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACL,KAAD;AAAA,SAAW,UAACd,QAAD,EAAc;AAChDF,IAAAA,KAAK,CACFsB,MADH,gBACkBN,KADlB,GAEGX,IAFH,CAEQ,YAAM;AACVH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEV,UAAR;AAAoBc,QAAAA,OAAO,EAAES;AAA7B,OAAD,CAAR;AACD,KAJH,EAKGP,KALH,CAKS,UAACC,GAAD;AAAA,aAASO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CAAT;AAAA,KALT;AAMD,GAPwB;AAAA,CAAlB;AASP,OAAO,IAAMa,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACrB,QAAD,EAAc;AAC7CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD,GAF0B;AAAA,CAApB","sourcesContent":["import {\n  SET_SCREAMS,\n  LOADING_DATA,\n  LIKE_HUM,\n  UNLIKE_HUM,\n  DELETE_HUM,\n  LOADING_UI,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  POST_HUM,\n  SET_SCREAM,\n  STOP_LOADING_UI,\n} from \"../types\";\nimport axios from \"axios\";\n\nexport const getHums = () => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/Hums\")\n    .then((res) => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: [],\n      });\n    });\n};\n\nexport const postHum = (newHum) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/Hum\", newHum)\n    .then((res) => {\n      dispatch({\n        type: POST_HUM,\n        payload: res.data,\n      });\n      dispatch({ type: CLEAR_ERRORS });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const likeHum = (humId) => (dispatch) => {\n  console.log(\"like\");\n  axios\n    .get(`/Hum/${humId}/like`)\n    .then((res) => {\n      dispatch({\n        type: LIKE_HUM,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const unlikeHum = (humId) => (dispatch) => {\n  console.log(\"unlike\");\n  axios\n    .get(`/Hum/${humId}/unlike`)\n    .then((res) => {\n      dispatch({\n        type: UNLIKE_HUM,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getHum = (humId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(`/Hum/${humId}`)\n    .then((res) => {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data,\n      });\n      dispatch({ type: STOP_LOADING_UI });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const deleteHum = (humId) => (dispatch) => {\n  axios\n    .delete(`/Hum/${humId}`)\n    .then(() => {\n      dispatch({ type: DELETE_HUM, payload: humId });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const clearErrors = () => (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"]},"metadata":{},"sourceType":"module"}