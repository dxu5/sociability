{"ast":null,"code":"import _classCallCheck from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/derekxu/Documents/socialability-client/src/components/layout/Notifications.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { connect } from \"react-redux\";\nimport { markNotificationsRead } from '../../redux/actions/userActions';\n\nvar Notifications = /*#__PURE__*/function (_Component) {\n  _inherits(Notifications, _Component);\n\n  function Notifications() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Notifications);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Notifications)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null\n    };\n\n    _this.handleOpen = function (event) {\n      _this.setState({\n        anchorEl: event.target\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.onMenuOpened = function () {\n      var unreadNotificationsIds = _this.props.notifications.filter(function (not) {\n        return !not.read;\n      }).map(function (not) {\n        return not.notificationId;\n      });\n\n      _this.props.markNotificationsRead(unreadNotificationsIds);\n    };\n\n    return _this;\n  }\n\n  _createClass(Notifications, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notifications = this.props.notifications;\n      var anchorEl = this.state.anchorEl;\n      dayjs.extend(relativeTime);\n      var notificationsIcon;\n\n      if (notifications && notifications.length > 0) {\n        notifications.filter(function (not) {\n          return not.read === false;\n        }).length > 0 ? notificationsIcon = /*#__PURE__*/React.createElement(Badge, {\n          badgeContent: notifications.filter(function (not) {\n            return not.read === false;\n          }).length,\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        })) : notificationsIcon = /*#__PURE__*/React.createElement(NotificationsIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }\n        });\n      } else {\n        notificationsIcon = /*#__PURE__*/React.createElement(NotificationsIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }\n        });\n      }\n\n      var notificationsMarkup = notifications && notifications.length > 0 ? notifications.map(function (not) {\n        var verb = not.type === 'like' ? 'liked' : 'commented on';\n        var time = dayjs(not.createdAt).fromNow();\n        var iconColor = not.read ? 'primary' : 'secondary';\n        var icon = not.type === 'like' ? /*#__PURE__*/React.createElement(FavoriteIcon, {\n          color: iconColor,\n          style: {\n            marginRight: 10\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }) : /*#__PURE__*/React.createElement(ChatIcon, {\n          color: iconColor,\n          style: {\n            marginRight: 10\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }\n        });\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: not.createdAt,\n          onClick: _this2.handleClose,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        }, icon, /*#__PURE__*/React.createElement(Typography, {\n          component: Link,\n          color: \"default\",\n          variant: \"body1\",\n          to: \"/users/\".concat(not.recipient, \"/Hum/\").concat(not.humId),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        }, not.sender, \" \", verb, \" your ability \", time));\n      }) : /*#__PURE__*/React.createElement(MenuItem, {\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"You have no notifications yet\");\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        placement: \"top\",\n        title: \"Notifications\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-owns\": anchorEl ? 'simple-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, notificationsIcon)), /*#__PURE__*/React.createElement(Menu, {\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleClose,\n        onEntered: this.onMenuOpened,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, notificationsMarkup));\n    }\n  }]);\n\n  return Notifications;\n}(Component);\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notifications: state.user.notifications\n  };\n};\n\nexport default connect(mapStateToProps, {\n  markNotificationsRead: markNotificationsRead\n})(Notifications);","map":{"version":3,"sources":["/Users/derekxu/Documents/socialability-client/src/components/layout/Notifications.js"],"names":["React","Component","Fragment","Link","dayjs","relativeTime","PropTypes","Menu","MenuItem","IconButton","Tooltip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotificationsRead","Notifications","state","anchorEl","handleOpen","event","setState","target","handleClose","onMenuOpened","unreadNotificationsIds","props","notifications","filter","not","read","map","notificationId","extend","notificationsIcon","length","notificationsMarkup","verb","type","time","createdAt","fromNow","iconColor","icon","marginRight","recipient","humId","sender","undefined","Boolean","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\n\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Badge from \"@material-ui/core/Badge\"\n\nimport NotificationsIcon from \"@material-ui/icons/Notifications\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport ChatIcon from \"@material-ui/icons/Chat\"\n\nimport {connect} from \"react-redux\"\nimport {markNotificationsRead} from '../../redux/actions/userActions'\n\nclass Notifications extends Component {\n    state ={\n        anchorEl: null\n    }\n    handleOpen = (event) => {\n        this.setState({anchorEl: event.target})\n    }\n    handleClose = () => {\n        this.setState({anchorEl: null})\n    }\n    onMenuOpened = () => {\n        let unreadNotificationsIds = this.props.notifications.filter(not => !not.read).map(not => not.notificationId);\n        this.props.markNotificationsRead(unreadNotificationsIds)\n    }\n    render(){\n        const notifications = this.props.notifications\n        const anchorEl = this.state.anchorEl\n\n        dayjs.extend(relativeTime)\n\n        let notificationsIcon;\n        if(notifications && notifications.length > 0){\n            notifications.filter(not => not.read === false).length > 0 \n                ? notificationsIcon = (\n                    <Badge badgeContent={notifications.filter(not => not.read === false).length} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                ): (\n                    notificationsIcon = <NotificationsIcon/>\n                )\n        }else{\n            notificationsIcon = <NotificationsIcon/>\n        }\n        let notificationsMarkup = notifications && notifications.length > 0 ? (\n            notifications.map(not => {\n                const verb = not.type === 'like' ? 'liked' : 'commented on';\n                const time = dayjs(not.createdAt).fromNow()\n                const iconColor = not.read ? 'primary' : 'secondary'\n                const icon = not.type === 'like' ? (\n                    <FavoriteIcon color = {iconColor} style={{marginRight: 10}}/>\n                ) : (\n                    <ChatIcon color={iconColor} style={{marginRight: 10}}/>\n                )\n\n                return (\n                    <MenuItem key={not.createdAt} onClick={this.handleClose}>\n                        {icon}\n                        <Typography component={Link} color=\"default\" variant=\"body1\" to={`/users/${not.recipient}/Hum/${not.humId}`}>\n                            {not.sender} {verb} your ability {time}\n                        </Typography>\n                    </MenuItem>\n                )\n            })\n        ) : (\n            <MenuItem onClick={this.handleClose}>\n                You have no notifications yet\n            </MenuItem>\n        )\n        return (\n            <Fragment>\n                <Tooltip placement=\"top\" title=\"Notifications\">\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined} aria-haspopup=\"true\" onClick={this.handleOpen}>\n                        {notificationsIcon}\n                    </IconButton>\n                </Tooltip>\n                <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose} onEntered={this.onMenuOpened}>\n                    {notificationsMarkup}\n                </Menu>\n            </Fragment>\n        )\n    }\n}\n\nNotifications.propTypes = {\n    markNotificationsRead: PropTypes.func.isRequired,\n    notifications: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    notifications: state.user.notifications\n})\n\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications)\n"]},"metadata":{},"sourceType":"module"}