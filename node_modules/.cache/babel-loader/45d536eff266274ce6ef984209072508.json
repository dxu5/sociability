{"ast":null,"code":"import _objectSpread from \"/Users/derekxu/Documents/socialability-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_SCREAMS, LIKE_HUM, UNLIKE_HUM, LOADING_DATA, DELETE_HUM } from \"../types\";\nvar initialState = {\n  hums: [],\n  hum: {},\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOADING_DATA:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_SCREAMS:\n      return _objectSpread({}, state, {\n        hums: action.payload,\n        loading: false\n      });\n\n    case LIKE_HUM:\n    case UNLIKE_HUM:\n      var index = state.hums.findIndex(function (hum) {\n        return hum.humId === action.payload.humId;\n      });\n      state.hums[index] = action.payload;\n      return _objectSpread({}, state);\n\n    case DELETE_HUM:\n      index = state.hum.findIndex(function (hum) {\n        return hum.humId === action.payload;\n      });\n      state.hums.splice(index, 1);\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/derekxu/Documents/socialability-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_HUM","UNLIKE_HUM","LOADING_DATA","DELETE_HUM","initialState","hums","hum","loading","state","action","type","payload","index","findIndex","humId","splice"],"mappings":";AAAA,SACEA,WADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,UALF,QAMO,UANP;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,+BACKM,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKR,WAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAFf;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,QAAL;AACA,SAAKC,UAAL;AACE,UAAIW,KAAK,GAAGJ,KAAK,CAACH,IAAN,CAAWQ,SAAX,CACV,UAACP,GAAD;AAAA,eAASA,GAAG,CAACQ,KAAJ,KAAcL,MAAM,CAACE,OAAP,CAAeG,KAAtC;AAAA,OADU,CAAZ;AAGAN,MAAAA,KAAK,CAACH,IAAN,CAAWO,KAAX,IAAoBH,MAAM,CAACE,OAA3B;AACA,+BACKH,KADL;;AAGF,SAAKL,UAAL;AACES,MAAAA,KAAK,GAAGJ,KAAK,CAACF,GAAN,CAAUO,SAAV,CAAoB,UAACP,GAAD;AAAA,eAASA,GAAG,CAACQ,KAAJ,KAAcL,MAAM,CAACE,OAA9B;AAAA,OAApB,CAAR;AACAH,MAAAA,KAAK,CAACH,IAAN,CAAWU,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB;AACA,+BACKJ,KADL;;AAGF;AACE,aAAOA,KAAP;AA5BJ;AA8BD","sourcesContent":["import {\n  SET_SCREAMS,\n  LIKE_HUM,\n  UNLIKE_HUM,\n  LOADING_DATA,\n  DELETE_HUM,\n} from \"../types\";\n\nconst initialState = {\n  hums: [],\n  hum: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_SCREAMS:\n      return {\n        ...state,\n        hums: action.payload,\n        loading: false,\n      };\n    case LIKE_HUM:\n    case UNLIKE_HUM:\n      let index = state.hums.findIndex(\n        (hum) => hum.humId === action.payload.humId\n      );\n      state.hums[index] = action.payload;\n      return {\n        ...state,\n      };\n    case DELETE_HUM:\n      index = state.hum.findIndex((hum) => hum.humId === action.payload);\n      state.hums.splice(index, 1);\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}