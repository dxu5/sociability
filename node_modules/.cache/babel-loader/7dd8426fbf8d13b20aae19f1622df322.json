{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from \"../types\";\nimport axios from \"axios\";\nexport var loginUser = function loginUser(userData, history) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.post(\"/login\", userData).then(function (res) {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(\"/\");\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var signupUser = function signupUser(newUserData, history) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.post(\"/signup\", newUserData).then(function (res) {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(\"/\");\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var getUserData = function getUserData() {\n  return function (dispatch) {\n    axios.get(\"/user\").then(function (res) {\n      dispatch({\n        type: SET_USER,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\n\nvar setAuthorizationHeader = function setAuthorizationHeader(token) {\n  var FBIdToken = \"Bearer \".concat(token);\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/derekxu/Documents/socialability-client/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","axios","loginUser","userData","history","dispatch","type","post","then","res","setAuthorizationHeader","data","token","getUserData","push","catch","err","payload","response","signupUser","newUserData","get","console","log","FBIdToken","localStorage","setItem","defaults","headers","common"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,YAA/B,EAA6CC,UAA7C,QAA+D,UAA/D;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAACC,QAAD,EAAc;AAC5DA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CACFM,IADH,CACQ,QADR,EACkBJ,QADlB,EAEGK,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbC,MAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACAP,MAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP;AAAR,OAAD,CAAR;AACAK,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,UADC;AAEPmB,QAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFf,OAAD,CAAR;AAID,KAbH;AAcD,GAhBwB;AAAA,CAAlB;AAkBP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAchB,OAAd;AAAA,SAA0B,UAACC,QAAD,EAAc;AAChEA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CACFM,IADH,CACQ,SADR,EACmBa,WADnB,EAEGZ,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbC,MAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACAP,MAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP;AAAR,OAAD,CAAR;AACAK,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,UADC;AAEPmB,QAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFf,OAAD,CAAR;AAID,KAbH;AAcD,GAhByB;AAAA,CAAnB;AAkBP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACR,QAAD,EAAc;AAC7CJ,IAAAA,KAAK,CACFoB,GADH,CACO,OADP,EAEGb,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,QADC;AAEPoB,QAAAA,OAAO,EAAER,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGI,KARH,CAQS,UAACC,GAAD;AAAA,aAASM,OAAO,CAACC,GAAR,CAAYP,GAAZ,CAAT;AAAA,KART;AASD,GAV0B;AAAA,CAApB;;AAYP,IAAMN,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACE,KAAD,EAAW;AACxC,MAAMY,SAAS,oBAAaZ,KAAb,CAAf;AACAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,SAAlC;AACAvB,EAAAA,KAAK,CAAC0B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDL,SAAjD;AACD,CAJD","sourcesContent":["import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from \"../types\";\n\nimport axios from \"axios\";\n\nexport const loginUser = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const getUserData = () => (dispatch) => {\n  axios\n    .get(\"/user\")\n    .then((res) => {\n      dispatch({\n        type: SET_USER,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n};\n"]},"metadata":{},"sourceType":"module"}